{"ast":null,"code":"var _jsxFileName = \"/Users/gohsiokwei/Desktop/demo sample/react-frontend/src/components/navigation/mobile/mobile-nav-bar.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { MobileMenuToggleButton } from \"./mobile-menu-toggle-button\";\nimport { MobileNavBarBrand } from \"./mobile-nav-bar-brand\";\nimport { MobileNavBarButtons } from \"./mobile-nav-bar-buttons\";\nimport { MobileNavBarTabs } from \"./mobile-nav-bar-tabs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar MobileMenuState;\n(function (MobileMenuState) {\n  MobileMenuState[\"CLOSED\"] = \"closed\";\n  MobileMenuState[\"OPEN\"] = \"open\";\n})(MobileMenuState || (MobileMenuState = {}));\nvar MobileMenuIcon;\n(function (MobileMenuIcon) {\n  MobileMenuIcon[\"CLOSE\"] = \"close\";\n  MobileMenuIcon[\"MENU\"] = \"menu\";\n})(MobileMenuIcon || (MobileMenuIcon = {}));\nexport const MobileNavBar = () => {\n  _s();\n  const [mobileMenuState, setMobileMenuState] = React.useState(MobileMenuState.CLOSED);\n  const [mobileMenuIcon, setMobileMenuIcon] = React.useState(MobileMenuIcon.MENU);\n  const isMobileMenuOpen = () => {\n    return mobileMenuState === MobileMenuState.OPEN;\n  };\n  const closeMobileMenu = () => {\n    document.body.classList.remove(\"mobile-scroll-lock\");\n    setMobileMenuState(MobileMenuState.CLOSED);\n    setMobileMenuIcon(MobileMenuIcon.MENU);\n  };\n  const openMobileMenu = () => {\n    document.body.classList.add(\"mobile-scroll-lock\");\n    setMobileMenuState(MobileMenuState.OPEN);\n    setMobileMenuIcon(MobileMenuIcon.CLOSE);\n  };\n  const toggleMobileMenu = () => {\n    if (isMobileMenuOpen()) {\n      closeMobileMenu();\n    } else {\n      openMobileMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mobile-nav-bar__container\",\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"mobile-nav-bar\",\n      children: [/*#__PURE__*/_jsxDEV(MobileNavBarBrand, {\n        handleClick: closeMobileMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MobileMenuToggleButton, {\n        icon: mobileMenuIcon,\n        handleClick: toggleMobileMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), isMobileMenuOpen() && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-nav-bar__menu\",\n        children: [/*#__PURE__*/_jsxDEV(MobileNavBarTabs, {\n          handleClick: closeMobileMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MobileNavBarButtons, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(MobileNavBar, \"bDIktD53e1MlhsgGTDYPRJ+GuMU=\");\n_c = MobileNavBar;\nvar _c;\n$RefreshReg$(_c, \"MobileNavBar\");","map":{"version":3,"names":["React","MobileMenuToggleButton","MobileNavBarBrand","MobileNavBarButtons","MobileNavBarTabs","jsxDEV","_jsxDEV","MobileMenuState","MobileMenuIcon","MobileNavBar","_s","mobileMenuState","setMobileMenuState","useState","CLOSED","mobileMenuIcon","setMobileMenuIcon","MENU","isMobileMenuOpen","OPEN","closeMobileMenu","document","body","classList","remove","openMobileMenu","add","CLOSE","toggleMobileMenu","className","children","handleClick","fileName","_jsxFileName","lineNumber","columnNumber","icon","_c","$RefreshReg$"],"sources":["/Users/gohsiokwei/Desktop/demo sample/react-frontend/src/components/navigation/mobile/mobile-nav-bar.tsx"],"sourcesContent":["import React from \"react\";\nimport { MobileMenuToggleButton } from \"./mobile-menu-toggle-button\";\nimport { MobileNavBarBrand } from \"./mobile-nav-bar-brand\";\nimport { MobileNavBarButtons } from \"./mobile-nav-bar-buttons\";\nimport { MobileNavBarTabs } from \"./mobile-nav-bar-tabs\";\n\nenum MobileMenuState {\n  CLOSED = \"closed\",\n  OPEN = \"open\",\n}\n\nenum MobileMenuIcon {\n  CLOSE = \"close\",\n  MENU = \"menu\",\n}\n\nexport const MobileNavBar: React.FC = () => {\n  const [mobileMenuState, setMobileMenuState] = React.useState<MobileMenuState>(\n    MobileMenuState.CLOSED\n  );\n  const [mobileMenuIcon, setMobileMenuIcon] = React.useState<MobileMenuIcon>(\n    MobileMenuIcon.MENU\n  );\n\n  const isMobileMenuOpen = () => {\n    return mobileMenuState === MobileMenuState.OPEN;\n  };\n\n  const closeMobileMenu = () => {\n    document.body.classList.remove(\"mobile-scroll-lock\");\n    setMobileMenuState(MobileMenuState.CLOSED);\n    setMobileMenuIcon(MobileMenuIcon.MENU);\n  };\n\n  const openMobileMenu = () => {\n    document.body.classList.add(\"mobile-scroll-lock\");\n    setMobileMenuState(MobileMenuState.OPEN);\n    setMobileMenuIcon(MobileMenuIcon.CLOSE);\n  };\n\n  const toggleMobileMenu = () => {\n    if (isMobileMenuOpen()) {\n      closeMobileMenu();\n    } else {\n      openMobileMenu();\n    }\n  };\n\n  return (\n    <div className=\"mobile-nav-bar__container\">\n      <nav className=\"mobile-nav-bar\">\n        <MobileNavBarBrand handleClick={closeMobileMenu} />\n        <MobileMenuToggleButton\n          icon={mobileMenuIcon}\n          handleClick={toggleMobileMenu}\n        />\n\n        {isMobileMenuOpen() && (\n          <div className=\"mobile-nav-bar__menu\">\n            <MobileNavBarTabs handleClick={closeMobileMenu} />\n            <MobileNavBarButtons />\n          </div>\n        )}\n      </nav>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}