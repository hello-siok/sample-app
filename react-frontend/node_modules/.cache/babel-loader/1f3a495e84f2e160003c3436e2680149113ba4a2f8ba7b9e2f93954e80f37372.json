{"ast":null,"code":"import axios from \"axios\";\nexport const callExternalApi = async options => {\n  try {\n    const response = await axios(options.config);\n    const {\n      data\n    } = response;\n    return {\n      data,\n      error: null\n    };\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      const axiosError = error;\n      const {\n        response\n      } = axiosError;\n      let message = \"http request failed\";\n      if (response && response.statusText) {\n        message = response.statusText;\n      }\n      if (axiosError.message) {\n        message = axiosError.message;\n      }\n      if (response && response.data && response.data.message) {\n        message = response.data.message;\n      }\n      return {\n        data: null,\n        error: {\n          message\n        }\n      };\n    }\n    return {\n      data: null,\n      error: {\n        message: error.message\n      }\n    };\n  }\n};","map":{"version":3,"names":["axios","callExternalApi","options","response","config","data","error","isAxiosError","axiosError","message","statusText"],"sources":["/Users/gohsiokwei/Desktop/demo sample/react-frontend/src/services/external-api.service.ts"],"sourcesContent":["import axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from \"axios\";\nimport { ApiResponse } from \"../models/api-response\";\nimport { AppError } from \"../models/app-error\";\n\nexport const callExternalApi = async (options: {\n  config: AxiosRequestConfig;\n}): Promise<ApiResponse> => {\n  try {\n    const response: AxiosResponse = await axios(options.config);\n    const { data } = response;\n\n    return {\n      data,\n      error: null,\n    };\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      const axiosError = error as AxiosError;\n\n      const { response } = axiosError;\n\n      let message = \"http request failed\";\n\n      if (response && response.statusText) {\n        message = response.statusText;\n      }\n\n      if (axiosError.message) {\n        message = axiosError.message;\n      }\n\n      if (response && response.data && (response.data as AppError).message) {\n        message = (response.data as AppError).message;\n      }\n\n      return {\n        data: null,\n        error: {\n          message,\n        },\n      };\n    }\n\n    return {\n      data: null,\n      error: {\n        message: (error as Error).message,\n      },\n    };\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAyD,OAAO;AAI5E,OAAO,MAAMC,eAAe,GAAG,MAAOC,OAErC,IAA2B;EAC1B,IAAI;IACF,MAAMC,QAAuB,GAAG,MAAMH,KAAK,CAACE,OAAO,CAACE,MAAM,CAAC;IAC3D,MAAM;MAAEC;IAAK,CAAC,GAAGF,QAAQ;IAEzB,OAAO;MACLE,IAAI;MACJC,KAAK,EAAE;IACT,CAAC;EACH,CAAC,CAAC,OAAOA,KAAK,EAAE;IACd,IAAIN,KAAK,CAACO,YAAY,CAACD,KAAK,CAAC,EAAE;MAC7B,MAAME,UAAU,GAAGF,KAAmB;MAEtC,MAAM;QAAEH;MAAS,CAAC,GAAGK,UAAU;MAE/B,IAAIC,OAAO,GAAG,qBAAqB;MAEnC,IAAIN,QAAQ,IAAIA,QAAQ,CAACO,UAAU,EAAE;QACnCD,OAAO,GAAGN,QAAQ,CAACO,UAAU;MAC/B;MAEA,IAAIF,UAAU,CAACC,OAAO,EAAE;QACtBA,OAAO,GAAGD,UAAU,CAACC,OAAO;MAC9B;MAEA,IAAIN,QAAQ,IAAIA,QAAQ,CAACE,IAAI,IAAKF,QAAQ,CAACE,IAAI,CAAcI,OAAO,EAAE;QACpEA,OAAO,GAAIN,QAAQ,CAACE,IAAI,CAAcI,OAAO;MAC/C;MAEA,OAAO;QACLJ,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE;UACLG;QACF;MACF,CAAC;IACH;IAEA,OAAO;MACLJ,IAAI,EAAE,IAAI;MACVC,KAAK,EAAE;QACLG,OAAO,EAAGH,KAAK,CAAWG;MAC5B;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}